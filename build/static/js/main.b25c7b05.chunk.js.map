{"version":3,"sources":["components/covid.js","App.js","reportWebVitals.js","index.js"],"names":["Covid","useState","actualData","setCountryInfo","getCovidData","a","fetch","res","json","console","log","message","useEffect","className","country","alt","src","critical","active","cases","todayCases","recovered","todayRecovered","deaths","todayDeaths","App","time","Date","toLocaleTimeString","ctime","setCtime","setInterval","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oRAiJeA,EA7ID,WACZ,MAAqCC,mBAAS,IAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMC,EAAY,uCAAG,8BAAAC,EAAA,+EAECC,MAChB,wDAHe,cAEXC,EAFW,gBAKQA,EAAIC,OALZ,OAKXN,EALW,OAMjBC,EAAeD,GANE,kDAUjBO,QAAQC,IAAI,KAAIC,SAVC,0DAAH,qDAiBlB,OAHAC,qBAAU,WACRR,MACC,IAED,gCACE,mCACE,mDACA,iEAEF,+BAGE,oBAAIS,UAAU,OAAd,SACE,qBAAKA,UAAU,aAAf,SACE,iCACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,SACE,kDAEF,mBAAGA,UAAU,0BAAb,SAAwCX,EAAWY,UACnD,qBACEC,IAAI,UACJC,IAAI,0IAQd,oBAAIH,UAAU,OAAd,SACE,qBAAKA,UAAU,aAAf,SACE,iCACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,SACE,8CAEF,oBAAGA,UAAU,0BAAb,kCACyB,iCAASX,EAAWe,uBAQrD,oBAAIJ,UAAU,OAAd,SACE,qBAAKA,UAAU,aAAf,SACE,iCACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,SACE,4CAEF,oBAAGA,UAAU,0BAAb,8BACqB,iCAASX,EAAWgB,qBAQjD,oBAAIL,UAAU,OAAd,SACE,qBAAKA,UAAU,aAAf,SACE,iCACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,SACE,2CAEF,oBAAGA,UAAU,0BAAb,6BACoB,iCAASX,EAAWiB,WAExC,oBAAGN,UAAU,0BAAb,gCAEE,iCAASX,EAAWkB,yBAQ9B,oBAAIP,UAAU,OAAd,SACE,qBAAKA,UAAU,aAAf,SACE,iCACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,SACE,+CAEF,oBAAGA,UAAU,0BAAb,iCACwB,iCAASX,EAAWmB,eAE5C,oBAAGR,UAAU,0BAAb,gCAEE,iCAASX,EAAWoB,6BAQ9B,oBAAIT,UAAU,OAAd,SACE,qBAAKA,UAAU,aAAf,SACE,iCACE,sBAAKA,UAAU,cAAf,UACE,mBAAGA,UAAU,aAAb,SACE,4CAEF,oBAAGA,UAAU,0BAAb,8BACqB,iCAASX,EAAWqB,YAEzC,oBAAGV,UAAU,0BAAb,6BAEE,iCAASX,EAAWsB,iCCzGvBC,G,MAzBH,WACV,IAAIC,GAAO,IAAIC,MAAOC,qBACtB,EAA0B3B,mBAASyB,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KASA,OAFAC,aALmB,WACjBL,GAAO,IAAIC,MAAOC,qBAClBE,EAASJ,KAGa,KAGtB,sBAAKM,GAAG,MAAR,UACE,sBAAKnB,UAAU,YAAf,UACE,qCACCgB,KAEH,cAAC,EAAD,IACA,qBAAKhB,UAAU,SAAf,SACE,6DCXOoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b25c7b05.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./covid.css\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nconst Covid = () => {\r\n  const [actualData, setCountryInfo] = useState({});\r\n  const getCovidData = async () => {\r\n    try {\r\n      const res = await fetch(\r\n        \"https://disease.sh/v3/covid-19/countries/philippines\"\r\n      );\r\n      const actualData = await res.json();\r\n      setCountryInfo(actualData);\r\n\r\n      //   console.log(actualData);\r\n    } catch (err) {\r\n      console.log(err.message);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getCovidData();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <center>\r\n        <h4>ðŸ”´ LIVE</h4>\r\n        <h2>COVID-19 CORONAVIRUS TRACKER</h2>\r\n      </center>\r\n      <ul>\r\n        {/* per li is a \"card\" */}\r\n        {/* country */}\r\n        <li className=\"card\">\r\n          <div className=\"card__main\">\r\n            <center>\r\n              <div className=\"card__inner\">\r\n                <p className=\"card__name\">\r\n                  <span>COUNTRY NAME</span>\r\n                </p>\r\n                <p className=\"card__total card__small\">{actualData.country}</p>\r\n                <img\r\n                  alt=\"PH flag\"\r\n                  src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Flag_of_the_Philippines.svg/1280px-Flag_of_the_Philippines.svg.png\"\r\n                />\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </li>\r\n\r\n        {/* critical */}\r\n        <li className=\"card\">\r\n          <div className=\"card__main\">\r\n            <center>\r\n              <div className=\"card__inner\">\r\n                <p className=\"card__name\">\r\n                  <span>Critical</span>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  Current Critical&nbsp; <strong>{actualData.critical}</strong>\r\n                </p>\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </li>\r\n\r\n        {/* Active */}\r\n        <li className=\"card\">\r\n          <div className=\"card__main\">\r\n            <center>\r\n              <div className=\"card__inner\">\r\n                <p className=\"card__name\">\r\n                  <span>Active</span>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  Active Cases&nbsp; <strong>{actualData.active}</strong>\r\n                </p>\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </li>\r\n\r\n        {/* Cases */}\r\n        <li className=\"card\">\r\n          <div className=\"card__main\">\r\n            <center>\r\n              <div className=\"card__inner\">\r\n                <p className=\"card__name\">\r\n                  <span>Cases</span>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  Total Cases&nbsp; <strong>{actualData.cases}</strong>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  New Cases Today&nbsp;\r\n                  <strong>{actualData.todayCases}</strong>\r\n                </p>\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </li>\r\n\r\n        {/* Recovered */}\r\n        <li className=\"card\">\r\n          <div className=\"card__main\">\r\n            <center>\r\n              <div className=\"card__inner\">\r\n                <p className=\"card__name\">\r\n                  <span>Recovered</span>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  Total Recovered&nbsp; <strong>{actualData.recovered}</strong>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  Recovered Today&nbsp;\r\n                  <strong>{actualData.todayRecovered}</strong>\r\n                </p>\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </li>\r\n\r\n        {/* Death */}\r\n        <li className=\"card\">\r\n          <div className=\"card__main\">\r\n            <center>\r\n              <div className=\"card__inner\">\r\n                <p className=\"card__name\">\r\n                  <span>Deaths</span>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  Total Deaths&nbsp; <strong>{actualData.deaths}</strong>\r\n                </p>\r\n                <p className=\"card__total card__small\">\r\n                  Deaths Today&nbsp;\r\n                  <strong>{actualData.todayDeaths}</strong>\r\n                </p>\r\n              </div>\r\n            </center>\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Covid;\r\n","import React, { useState } from \"react\";\nimport Covid from \"./components/covid\";\nimport \"./App.css\";\n\nconst App = () => {\n  let time = new Date().toLocaleTimeString();\n  const [ctime, setCtime] = useState(time);\n\n  const UpdateTime = () => {\n    time = new Date().toLocaleTimeString();\n    setCtime(time);\n  };\n\n  setInterval(UpdateTime, 1000);\n\n  return (\n    <div id=\"app\">\n      <div className=\"datentime\">\n        <p>Time</p>\n        {ctime}\n      </div>\n      <Covid />\n      <div className=\"footer\">\n        <center>&copy; Dome of Don</center>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}